---
import DotBackground from "../components/DotBackground.astro"
---

<section class="relative pb-12">
  <DotBackground />
  <div class="bg-theme-blue-light relative mx-auto mb-16 aspect-video h-full w-full object-cover">
    <div
      title="Logo de Lola Lolita Land"
      class="absolute top-0 right-0 left-0 z-50 mx-auto flex justify-center lg:top-14"
    >
      <div
        class="logo lazy_background_image_maskImage lazy_background_image relative sm:size-32 md:size-44 lg:size-56"
      >
        <div></div>
      </div>
    </div>

    <div class="relative image" title="Fotografía de una joven recostada, que es Lola Lolita, sobre la arena con una cola de sirena azul, frente a una piscina con toboganes rosas en un entorno tropical, con el texto ‘Lola Lolita Land’ en la parte superior.">
      <div class="water"></div>

      <svg>
        <defs>
          <filter id="turbulence" x="0" y="0" width="100%" height="100%">
            <feTurbulence
              id="sea-filter"
              type="fractalNoise"
              numOctaves="3"
              seed="2"
              baseFrequency="0.01 0.04"
            ></feTurbulence>
            <feDisplacementMap scale="10" in="SourceGraphic"></feDisplacementMap>
            <animate
              xlink:href="#sea-filter"
              attributeName="baseFrequency"
              dur="60s"
              keyTimes="0;0.5;1"
              values="0.02 0.03;0.04 0.06;0.02 0.06"
              repeatCount="indefinite"
            ></animate>
          </filter>
        </defs>
      </svg>
      
    </div>
    <div class="absolute inset-0 bg-gradient-to-b from-transparent from-85% to-[#ff0695]">
    </div>
    <div class="absolute w-full z-20" id="header-waves">
      <svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28 " preserveAspectRatio="none">
        <defs>
          <path id="wave-path" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z">
        </defs>
        <g class="wave4">
          <use xlink:href="#wave-path" x="50" y="0" class="fill-[#383acf] opacity-30" ></use>
        </g>
        <g class="wave1">
          <use xlink:href="#wave-path" x="50" y="3" class="fill-[#ff0695] opacity-50" ></use>
        </g>
        <g class="wave2">
          <use xlink:href="#wave-path" x="50" y="6" class="fill-[#ff0695] opacity-70" ></use>
        </g>
        <g class="wave3">
          <use xlink:href="#wave-path" x="50" y="9" class="fill-[#ff0695] opacity-50" ></use>
        </g>
      </svg>
    </div>
  </div>


</section>

<style>
  .image{
    background-image: url('/images/hero.webp');
    height: 100%;
    width: 100%;
    background-size: cover;
    z-index: 20;

  }
  .water{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('/images/mask_hero.webp');
    background-size: cover;
    filter: url('#turbulence');
  }

  .logo {
    -webkit-mask-image: url("/favicon.svg");
    mask-image: url("/favicon.svg");
    -webkit-mask-size: cover;
    mask-size: cover;
    background-color: rgb(243, 243, 243);
    position: relative;
    overflow: hidden;
  }
  .lazy_background_image_maskImage {
    -webkit-mask-size: cover;
    mask-size: cover;
    -webkit-mask-image: url("/favicon.svg");
    mask-image: url("/favicon.svg");
  }
  .lazy_background_image {
    transition: 1s cubic-bezier(0.6, 0.6, 0, 1) opacity;
  }
  .logo div {
    width: 200px;
    height: 300px;
    position: absolute;
    top: 50px;
    left: 0;
    animation: 8s linear infinite;
    background: #ff0695;
    transform: translate(-300px, -70px) rotate(20deg);
    animation-name: logo_animation !important;
  }

@keyframes logo_animation {
    0% {
      transform: translate(-300px, -70px) rotate(20deg);
    }
    100% {
      transform: translate(600px, -70px) rotate(20deg);
    }
  }

  /* wave animation start */

  .waves {
    height: 80px;
    width: 100%;
    margin-top: -70px;
  }

  .wave1 use {
    animation: move-forever1 10s linear infinite;
    animation-delay: -2s;
  }

  .wave2 use {
    animation: move-forever2 8s linear infinite;
    animation-delay: -2s;
  }

  .wave3 use {
    animation: move-forever3 6s linear infinite;
    animation-delay: -2s;
  }

  .wave4 use {
    animation: move-forever3 4s linear infinite;
    animation-delay: -2s;
  }

  @-webkit-keyframes move-forever1 {
    0% {
      transform: translate(85px, 0%);
    }

    100% {
      transform: translate(-90px, 0%);
    }
  }

  @keyframes move-forever1 {
    0% {
      transform: translate(85px, 0%);
    }

    100% {
      transform: translate(-90px, 0%);
    }
  }

  @-webkit-keyframes move-forever2 {
    0% {
      transform: translate(-90px, 0%);
    }

    100% {
      transform: translate(85px, 0%);
    }
  }

  @keyframes move-forever2 {
    0% {
      transform: translate(-90px, 0%);
    }

    100% {
      transform: translate(85px, 0%);
    }
  }

  @-webkit-keyframes move-forever3 {
    0% {
      transform: translate(-90px, 0%);
    }

    100% {
      transform: translate(85px, 0%);
    }
  }

  @keyframes move-forever3 {
    0% {
      transform: translate(-90px, 0%);
    }

    100% {
      transform: translate(85px, 0%);
    }
  }

  @-webkit-keyframes move-forever4 {
    0% {
      transform: translate(-90px, 0%);
    }

    100% {
      transform: translate(85px, 0%);
    }
  }

  @keyframes move-forever4 {
    0% {
      transform: translate(-90px, 0%);
    }

    100% {
      transform: translate(85px, 0%);
    }
  }

  .waves > use {
    animation: wave 25s cubic-bezier(0.5, 0.5, 0.45, 0.5) infinite;
  }

  @keyframes wave {
    0% {
      transform: translate3d(-90px, 0, 0);
    }
    100% {
      transform: translate3d(85px, 0, 0);
    }
  }

  @keyframes background-pan {
    from {
      background-position: 0% center;
    }

    to {
      background-position: -200% center;
    }
  }

  @keyframes scale {
    from, to {
      transform: scale(0);
    }

    50% {
      transform: scale(1);
    }
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }

    to {
      transform: rotate(180deg);
    }
  }
</style>

